@page "/updateExerciseFormId={id}"
@using SmartWorkoutDataAccess.Entities
@using SmartWorkoutDataAccess
@using SmartWorkoutDataAccess.Repositories
@inject IGenericRepository<Exercise> exercise_repo
@inject NavigationManager NavManager
@rendermode InteractiveServer

<div class="form_container">
    <div class="form_title">Update Exercise</div>

    <EditForm Model="@exercise" OnValidSubmit="@Submit" FormName="user_update">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form_input">
            <div>Name</div>
            <InputText @bind-Value="exercise.Name" />
            <ValidationMessage For="@(() => exercise.Name)" />
        </div>
        <button class="update_button" type="submit">Update</button>
        <button class="cancel_button" type="button" @onclick="Cancel">Cancel</button>
    </EditForm>
</div>
@code {
    Exercise exercise = new Exercise();
    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        int Id = Convert.ToInt32(id);
        exercise = await exercise_repo.GetById(Id);
    }

    void Submit()
    {
        exercise_repo.Update(exercise);
        NavManager.NavigateTo("/exercises");
    }
    void Cancel()
    {
        NavManager.NavigateTo("/exercises");
    }
}